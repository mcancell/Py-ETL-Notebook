WITH
    -- SECTION 1: Precompute Overall Averages
    Overall_Avg_Fare AS (
        -- Calculate the overall average fare across all trips
        SELECT AVG(fare) AS Metric_Avg_All_Trips 
        FROM `bigquery-public-data.chicago_taxi_trips.taxi_trips` 
        WHERE fare IS NOT NULL
    ),
    Overall_Avg_Trip_Duration AS (
        -- Calculate the overall average trip duration (in minutes) across all trips
        SELECT AVG(trip_seconds) / 60 AS Metric_Avg_All_Trips 
        FROM `bigquery-public-data.chicago_taxi_trips.taxi_trips` 
        WHERE trip_seconds IS NOT NULL
    ),

    -- SECTION 2: Metric Calculations
    -- Calculate Month-over-Month (MoM) Average Fare Changes by City
    MoM_Avg_Trip_Fare_Decreases AS (
        SELECT 
            "Largest Month-Over-Month Decrease in Average Fare by City/Area" AS Metric_Description,
            CONCAT(trips.company, " - ", geo.city) AS company, -- Combine company name and city for grouping
            FORMAT_TIMESTAMP('%Y-%m', trips.trip_start_timestamp) AS trip_month, -- Extract year and month
            AVG(trips.fare) AS metric, -- Average fare for the month
            ROUND(AVG(trips.fare) - LAG(AVG(trips.fare)) OVER (PARTITION BY trips.company ORDER BY trips.trip_start_timestamp), 2) AS metric_delta, -- MoM change
            ROUND(AVG(AVG(trips.fare)) OVER (PARTITION BY trips.company ORDER BY trips.trip_start_timestamp ROWS BETWEEN 2 PRECEDING AND CURRENT ROW), 2) AS smoothed_metric, -- 3-month rolling average
            (SELECT Metric_Avg_All_Trips FROM Overall_Avg_Fare LIMIT 1) AS Metric_Avg_All_Trips, -- Overall average fare
            AVG(trips.fare) AS Metric_Avg_By_Company -- Company-specific average fare
        FROM `bigquery-public-data.chicago_taxi_trips.taxi_trips` trips
        LEFT JOIN `mikecancell-development.Chicago_Taxi_Trips.Geo_Locations` AS geo
        ON 
                ABS(geo.latitude - trips.pickup_latitude) < 0.05 
            AND ABS(geo.longitude - trips.pickup_longitude) < 0.05 -- Match trips to city/area
        WHERE 
                trips.company IS NOT NULL 
            AND trips.trip_seconds IS NOT NULL 
            AND trips.fare IS NOT NULL -- Filter invalid data
        GROUP BY 
            trips.company,
            trips.trip_start_timestamp,geo.city
    ),

    -- Calculate Month-over-Month (MoM) Average Trip Duration Changes by City
    MoM_Avg_Trip_Dur_Decreases AS (
        SELECT 
            "Largest Month-Over-Month Decrease in Average Trip Duration by City/Area" AS Metric_Description,
            CONCAT(trips.company, " - ", geo.city) AS company, -- Combine company name and city for grouping
            FORMAT_TIMESTAMP('%Y-%m', trips.trip_start_timestamp) AS trip_month, -- Extract year and month
            AVG(trips.trip_seconds) / 60 AS metric, -- Average trip duration (in minutes)
            ROUND(AVG(trips.trip_seconds) / 60 - LAG(AVG(trips.trip_seconds) / 60) OVER (PARTITION BY trips.company ORDER BY trips.trip_start_timestamp), 2) AS metric_delta, -- MoM change
            ROUND(AVG(AVG(trips.trip_seconds) / 60) OVER (PARTITION BY trips.company ORDER BY trips.trip_start_timestamp ROWS BETWEEN 2 PRECEDING AND CURRENT ROW), 2) AS smoothed_metric, -- 3-month rolling average
            (SELECT Metric_Avg_All_Trips FROM Overall_Avg_Trip_Duration LIMIT 1) AS Metric_Avg_All_Trips, -- Overall average trip duration
            AVG(trips.trip_seconds) / 60 AS Metric_Avg_By_Company -- Company-specific average trip duration
        FROM `bigquery-public-data.chicago_taxi_trips.taxi_trips` trips
        LEFT JOIN `mikecancell-development.Chicago_Taxi_Trips.Geo_Locations` AS geo
        ON ABS(geo.latitude - trips.pickup_latitude) < 0.05 
        AND ABS(geo.longitude - trips.pickup_longitude) < 0.05 -- Match trips to city/area
        WHERE trips.company IS NOT NULL 
        AND trips.trip_seconds IS NOT NULL -- Filter invalid data
        GROUP BY trips.company, trips.trip_start_timestamp, geo.city
    ),

    -- SECTION 3: Filtering
    -- Filter Fare Decreases
    Filtered_Fare_Decreases AS (
        SELECT *
        FROM MoM_Avg_Trip_Fare_Decreases
        WHERE ABS(metric_delta) > 0.01 -- Exclude insignificant changes
        AND smoothed_metric IS NOT NULL -- Ensure rolling average is available
        AND smoothed_metric > 1 -- Apply a minimum threshold for rolling average
    ),

    -- Filter Trip Duration Decreases
    Filtered_Trip_Dur_Decreases AS (
        SELECT *
        FROM MoM_Avg_Trip_Dur_Decreases
        WHERE ABS(metric_delta) > 0.01 -- Exclude insignificant changes
        AND smoothed_metric IS NOT NULL -- Ensure rolling average is available
        AND smoothed_metric > 1 -- Apply a minimum threshold for rolling average
    ),

    -- SECTION 4: Ranking
    -- Rank Fare Decreases
    Ranked_Fare_Decreases AS (
        SELECT
            Metric_Description,
            company,
            trip_month,
            smoothed_metric AS metric,
            metric_delta,
            Metric_Avg_All_Trips,
            Metric_Avg_By_Company,
            ROW_NUMBER() OVER (ORDER BY metric_delta DESC) AS rank -- Rank by largest decrease
        FROM Filtered_Fare_Decreases
    ),

    -- Rank Trip Duration Decreases
    Ranked_Trip_Dur_Decreases AS (
        SELECT
            Metric_Description,
            company,
            trip_month,
            smoothed_metric AS metric,
            metric_delta,
            Metric_Avg_All_Trips,
            Metric_Avg_By_Company,
            ROW_NUMBER() OVER (ORDER BY metric_delta DESC) AS rank -- Rank by largest decrease
        FROM Filtered_Trip_Dur_Decreases
    ),

    -- SECTION 5: Insights
    -- Top 3 Fare Decrease Insights
    Top_Fare_Decrease_Insights AS (
        SELECT
            b.*,
            CASE
                WHEN Prior_Mon_Metric_Val IS NULL THEN "No prior data available to calculate insights for the city/area."
                ELSE CONCAT(
                    "The current average fare is ",
                    FORMAT('%.1f', SAFE_DIVIDE(b.metric, b.Metric_Avg_All_Trips)),
                    "x the overall average and ",
                    FORMAT('%.1f', SAFE_DIVIDE(b.metric, b.Metric_Avg_By_Company)),
                    "x the company's average for the city/area. ",
                    "The variance from the overall average fare is ",
                    FORMAT('%.1f', b.metric - b.Metric_Avg_All_Trips),
                    ". ",
                    "Potential reasons could include city-specific seasonal changes, marketing campaigns, or operational adjustments."
                )
            END AS Metric_Insight
        FROM (
            SELECT
                a.*,
                a.metric - a.metric_delta AS Prior_Mon_Metric_Val,
                ROUND(SAFE_DIVIDE(a.metric_delta, (a.metric - a.metric_delta)), 3) AS Percent_Change,
                CONCAT(FORMAT('%.1f', SAFE_DIVIDE(a.metric_delta, (a.metric - a.metric_delta)) * 100), '%') AS Percent_Change_Str
            FROM (
                SELECT *
                FROM Ranked_Fare_Decreases
                WHERE rank <= 3 -- Select top 3 globally
            ) a
        ) b
    ),

    -- Top 3 Trip Duration Decrease Insights
    Top_Trip_Dur_Decrease_Insights AS (
        SELECT
            b.*,
            CASE
                WHEN Prior_Mon_Metric_Val IS NULL THEN "No prior data available to calculate insights for the city/area."
                ELSE CONCAT(
                    "The current average trip duration is ",
                    FORMAT('%.1f', SAFE_DIVIDE(b.metric, b.Metric_Avg_All_Trips)),
                    "x the overall average and ",
                    FORMAT('%.1f', SAFE_DIVIDE(b.metric, b.Metric_Avg_By_Company)),
                    "x the company's average for the city/area. ",
                    "The variance from the overall average trip duration is ",
                    FORMAT('%.1f', b.metric - b.Metric_Avg_All_Trips),
                    ". ",
                    "Potential reasons could include city-specific seasonal changes, marketing campaigns, or operational adjustments."
                )
            END AS Metric_Insight
        FROM (
            SELECT
                a.*,
                a.metric - a.metric_delta AS Prior_Mon_Metric_Val,
                ROUND(SAFE_DIVIDE(a.metric_delta, (a.metric - a.metric_delta)), 3) AS Percent_Change,
                CONCAT(FORMAT('%.1f', SAFE_DIVIDE(a.metric_delta, (a.metric - a.metric_delta)) * 100), '%') AS Percent_Change_Str
            FROM (
                SELECT *
                FROM Ranked_Trip_Dur_Decreases
                WHERE rank <= 3 -- Select top 3 globally
            ) a
        ) b
    )

-- SECTION 6: Combine Insights
SELECT * FROM Top_Fare_Decrease_Insights
UNION ALL
SELECT * FROM Top_Trip_Dur_Decrease_Insights;