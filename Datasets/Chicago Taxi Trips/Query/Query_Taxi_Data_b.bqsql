WITH
    -- Precompute Overall Averages
    Overall_Avg_Fare AS (
        SELECT AVG(fare) AS Metric_Avg_All_Trips FROM `bigquery-public-data.chicago_taxi_trips.taxi_trips` WHERE fare IS NOT NULL
    ),
    Overall_Avg_Trip_Duration AS (
        SELECT AVG(trip_seconds) / 60 AS Metric_Avg_All_Trips FROM `bigquery-public-data.chicago_taxi_trips.taxi_trips` WHERE trip_seconds IS NOT NULL
    ),

    -- Calculate Month-over-Month Average Fare Decreases by City
    MoM_Avg_Trip_Fare_Decreases_by_City_PreFiltered AS (
        SELECT 
            "Largest Month-Over-Month Decrease in Average Fare by City/Area" AS Metric_Description,
            CONCAT(trips.company, " - ", geo.city) AS company,
            FORMAT_TIMESTAMP('%Y-%m', trips.trip_start_timestamp) AS trip_month,
            AVG(trips.fare) AS metric,
            ROUND(AVG(trips.fare) - LAG(AVG(trips.fare)) OVER (PARTITION BY trips.company ORDER BY trips.trip_start_timestamp), 2) AS metric_delta,
            (SELECT Metric_Avg_All_Trips FROM Overall_Avg_Fare LIMIT 1) AS Metric_Avg_All_Trips, -- Use precomputed overall average
            AVG(trips.fare) AS Metric_Avg_By_Company -- Precompute company-specific average
        FROM `bigquery-public-data.chicago_taxi_trips.taxi_trips` trips
        LEFT JOIN `mikecancell-development.Chicago_Taxi_Trips.Geo_Locations` AS geo
        ON ABS(geo.latitude - trips.pickup_latitude) < 0.05 AND ABS(geo.longitude - trips.pickup_longitude) < 0.05
        WHERE trips.company IS NOT NULL AND trips.trip_seconds IS NOT NULL AND trips.fare IS NOT NULL
        GROUP BY trips.company, trips.trip_start_timestamp, geo.city
    ),

    MoM_Avg_Trip_Fare_Decreases_by_City AS (
        SELECT *
        FROM MoM_Avg_Trip_Fare_Decreases_by_City_PreFiltered
        WHERE ABS(metric_delta) > 0.01 -- Filter out insignificant changes
    ),

    -- Calculate Month-over-Month Average Trip Duration Decreases by City
    MoM_Avg_Trip_Dur_Decreases_by_City_PreFiltered AS (
        SELECT 
            "Largest Month-Over-Month Decrease in Average Trip Duration by City/Area" AS Metric_Description,
            CONCAT(trips.company, " - ", geo.city) AS company,
            FORMAT_TIMESTAMP('%Y-%m', trips.trip_start_timestamp) AS trip_month,
            AVG(trips.trip_seconds) / 60 AS metric,
            ROUND(AVG(trips.trip_seconds) / 60 - LAG(AVG(trips.trip_seconds) / 60) OVER (PARTITION BY trips.company ORDER BY trips.trip_start_timestamp), 2) AS metric_delta,
            (SELECT Metric_Avg_All_Trips FROM Overall_Avg_Trip_Duration LIMIT 1) AS Metric_Avg_All_Trips, -- Use precomputed overall average
            AVG(trips.trip_seconds) / 60 AS Metric_Avg_By_Company -- Precompute company-specific average
        FROM `bigquery-public-data.chicago_taxi_trips.taxi_trips` trips
        LEFT JOIN `mikecancell-development.Chicago_Taxi_Trips.Geo_Locations` AS geo
        ON ABS(geo.latitude - trips.pickup_latitude) < 0.05 AND ABS(geo.longitude - trips.pickup_longitude) < 0.05
        WHERE trips.company IS NOT NULL AND trips.trip_seconds IS NOT NULL
        GROUP BY trips.company, trips.trip_start_timestamp, geo.city
    ),

    MoM_Avg_Trip_Dur_Decreases_by_City AS (
        SELECT *
        FROM MoM_Avg_Trip_Dur_Decreases_by_City_PreFiltered
        WHERE ABS(metric_delta) > 0.01 -- Filter out insignificant changes
    ),

    -- Rank Companies by Largest Decrease in Average Fare Per Trip
    MoM_Avg_Trip_Fare_Decreases_Ranked AS (
        SELECT
            Metric_Description, -- Include Metric_Description
            company,
            trip_month,
            metric,
            metric_delta,
            Metric_Avg_All_Trips,
            Metric_Avg_By_Company,
            ROW_NUMBER() OVER (PARTITION BY company ORDER BY metric_delta DESC) AS rank
        FROM MoM_Avg_Trip_Fare_Decreases_by_City
    ),

    -- Rank Companies by Largest Decrease in Average Trip Duration
    MoM_Avg_Trip_Dur_Decreases_Ranked AS (
        SELECT
            Metric_Description, -- Include Metric_Description
            company,
            trip_month,
            metric,
            metric_delta,
            Metric_Avg_All_Trips,
            Metric_Avg_By_Company,
            ROW_NUMBER() OVER (PARTITION BY company ORDER BY metric_delta DESC) AS rank
        FROM MoM_Avg_Trip_Dur_Decreases_by_City
    ),

    -- Insights for Fare Decreases
    Top_Fare_Decrease_Insights AS (
        SELECT
            b.*,
            CASE
                WHEN Prior_Mon_Metric_Val IS NULL THEN "No prior data available to calculate insights for the city/area."
                ELSE CONCAT(
                    "The current average fare is ",
                    FORMAT('%.1f', SAFE_DIVIDE(b.Mon_Metric_Val, b.Metric_Avg_All_Trips)),
                    "x the overall average and ",
                    FORMAT('%.1f', SAFE_DIVIDE(b.Mon_Metric_Val, b.Metric_Avg_By_Company)),
                    "x the company's average for the city/area. ",
                    "The variance from the overall average fare is ",
                    FORMAT('%.1f', b.Mon_Metric_Val - b.Metric_Avg_All_Trips),
                    ". ",
                    "Potential reasons could include city-specific seasonal changes, marketing campaigns, or operational adjustments."
                )
            END AS Metric_Insight
        FROM (
            SELECT
                a.*,
                a.Mon_Metric_Val - a.Metric_Delta AS Prior_Mon_Metric_Val,
                ROUND(SAFE_DIVIDE(a.Metric_Delta, (a.Mon_Metric_Val - a.Metric_Delta)), 3) AS Percent_Change,
                CONCAT(FORMAT('%.1f', SAFE_DIVIDE(a.Metric_Delta, (a.Mon_Metric_Val - a.Metric_Delta)) * 100), '%') AS Percent_Change_Str
            FROM (
                SELECT
                    Metric_Description,
                    company AS Taxi_Company,
                    trip_month AS Trip_Month,
                    metric AS Mon_Metric_Val,
                    metric_delta AS Metric_Delta,
                    Metric_Avg_All_Trips,
                    Metric_Avg_By_Company,
                    ROW_NUMBER() OVER (ORDER BY metric_delta DESC) AS overall_rank
                FROM MoM_Avg_Trip_Fare_Decreases_Ranked
                WHERE rank = 1
            ) a
            WHERE overall_rank <= 3
        ) b
    ),

    -- Insights for Trip Duration Decreases
    Top_Trip_Dur_Decreases AS (
        SELECT
            b.*,
            CASE
                WHEN Prior_Mon_Metric_Val IS NULL THEN "No prior data available to calculate insights for the city/area."
                ELSE CONCAT(
                    "The current average trip duration is ",
                    FORMAT('%.1f', SAFE_DIVIDE(b.Mon_Metric_Val, b.Metric_Avg_All_Trips)),
                    "x the overall average and ",
                    FORMAT('%.1f', SAFE_DIVIDE(b.Mon_Metric_Val, b.Metric_Avg_By_Company)),
                    "x the company's average for the city/area. ",
                    "The variance from the overall average trip duration is ",
                    FORMAT('%.1f', b.Mon_Metric_Val - b.Metric_Avg_All_Trips),
                    ". ",
                    "Potential reasons could include city-specific seasonal changes, marketing campaigns, or operational adjustments."
                )
            END AS Metric_Insight
        FROM (
            SELECT
                a.*,
                a.Mon_Metric_Val - a.Metric_Delta AS Prior_Mon_Metric_Val,
                ROUND(SAFE_DIVIDE(a.Metric_Delta, (a.Mon_Metric_Val - a.Metric_Delta)), 3) AS Percent_Change,
                CONCAT(FORMAT('%.1f', SAFE_DIVIDE(a.Metric_Delta, (a.Mon_Metric_Val - a.Metric_Delta)) * 100), '%') AS Percent_Change_Str
            FROM (
                SELECT
                    Metric_Description,
                    company AS Taxi_Company,
                    trip_month AS Trip_Month,
                    metric AS Mon_Metric_Val,
                    metric_delta AS Metric_Delta,
                    Metric_Avg_All_Trips,
                    Metric_Avg_By_Company,
                    ROW_NUMBER() OVER (ORDER BY metric_delta DESC) AS overall_rank
                FROM MoM_Avg_Trip_Dur_Decreases_Ranked
                WHERE rank = 1
            ) a
            WHERE overall_rank <= 3
        ) b
    )

-- Combine Insights
SELECT * FROM Top_Fare_Decrease_Insights
UNION ALL
SELECT * FROM Top_Trip_Dur_Decreases;